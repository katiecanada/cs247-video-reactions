{
  "name": "zeroclipboard",
  "title": "ZeroClipboard",
  "version": "2.0.0-beta.8",
  "description": "The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface.",
  "keywords": [
    "flash",
    "clipboard",
    "copy",
    "cut",
    "paste",
    "zclip",
    "clip",
    "clippy"
  ],
  "homepage": "http://zeroclipboard.org/",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/zeroclipboard/zeroclipboard/blob/master/LICENSE"
    }
  ],
  "contributors": [
    {
      "name": "Jon Rohan",
      "url": "http://jonrohan.me/"
    },
    {
      "name": "James M. Greene",
      "email": "james.m.greene@gmail.com",
      "url": "http://jamesgreene.net/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/zeroclipboard/zeroclipboard.git"
  },
  "bugs": {
    "url": "https://github.com/zeroclipboard/zeroclipboard/issues"
  },
  "dependencies": {
    "send": "0"
  },
  "devDependencies": {
    "grunt": "^0.4.4",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-connect": "^0.7.1",
    "grunt-contrib-qunit": "^0.4.0",
    "grunt-contrib-concat": "^0.4.0",
    "grunt-contrib-uglify": "^0.4.0",
    "grunt-chmod": "^1.0.3",
    "flex-sdk": "~4.6.0-0",
    "grunt-mxmlc": "^0.5.1",
    "grunt-template": "^0.2.3",
    "grunt-contrib-watch": "^0.6.1",
    "flexpmd": "^1.3.0-1",
    "grunt-flexpmd": "^0.1.2",
    "qunitjs": "^1.14.0",
    "qunit-composite": "^1.0.1",
    "jquery": "^1.11.1",
    "spm": "^3.0.0"
  },
  "main": "./dist/ZeroClipboard.js",
  "component": {
    "scripts": {
      "zeroclipboard": "./dist/ZeroClipboard.js"
    }
  },
  "spm": {
    "main": "ZeroClipboard.js",
    "output": [
      "ZeroClipboard.swf"
    ]
  },
  "scripts": {
    "test": "grunt travis --verbose",
    "postpublish": "spm publish"
  },
  "readme": "# WARNING\n**This `master` branch contains the v2.x codebase for ZeroClipboard, which is currently in an unstable state! If you\nwant to see the v1.x codebase, please see the [`1.x-master`](https://github.com/zeroclipboard/zeroclipboard/tree/1.x-master) branch instead.**\n\n\n# ZeroClipboard\n\nThe ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible [Adobe Flash](http://en.wikipedia.org/wiki/Adobe_Flash) movie and a [JavaScript](http://en.wikipedia.org/wiki/JavaScript) interface. The \"Zero\" signifies that the library is invisible and the user interface is left entirely up to you. \n\nThis is achieved by automatically floating the invisible movie on top of a [DOM](http://en.wikipedia.org/wiki/Document_Object_Model) element of your choice. Standard mouse events are even propagated out to your DOM element, so you can still have rollover and mousedown effects.\n\n\n## Limitations\n\nNote that, due to browser and Flash security restrictions, this clipboard injection can _**ONLY**_ occur when the user clicks on the invisible Flash movie. A simulated `click` event from JavaScript will not suffice as this would enable [clipboard poisoning](http://www.computerworld.com/s/article/9117268/Adobe_patches_Flash_clickjacking_and_clipboard_poisoning_bugs).\n\n\n## Simple Example\n\n```html\n<html>\n  <body>\n    <button id=\"copy-button\" data-clipboard-text=\"Copy Me!\" title=\"Click to copy me.\">Copy to Clipboard</button>\n    <script src=\"ZeroClipboard.js\"></script>\n    <script src=\"main.js\"></script>\n  </body>\n</html>\n```\n\n```js\n// main.js\nvar client = new ZeroClipboard( document.getElementById(\"copy-button\") );\n\nclient.on( \"ready\", function( readyEvent ) {\n  // alert( \"ZeroClipboard SWF is ready!\" );\n\n  client.on( \"aftercopy\", function( event ) {\n    // `this` === `client`\n    // `event.target` === the element that was clicked\n    event.target.style.display = \"none\";\n    alert(\"Copied text to clipboard: \" + event.data[\"text/plain\"] );\n  } );\n} );\n```\n\nSee the [instructions](docs/instructions.md) for more advanced options in using the library on your site.\n\nHere is a working [test page](http://zeroclipboard.org/#demo) where you can try out ZeroClipboard in your browser.\n\n\n## Testing ZeroClipboard Locally\n\nTo test the page [demo page](http://zeroclipboard.org/#demo) locally, clone the [website repo](https://github.com/zeroclipboard/zeroclipboard.org).\n\n\n## Support\n\nThis library is fully compatible with Flash Player 11.0.0 and above, which requires\nthat the clipboard copy operation be initiated by a user click event inside the\nFlash movie. This is achieved by automatically floating the invisible movie on top\nof a [DOM](http://en.wikipedia.org/wiki/Document_Object_Model) element of your\nchoice. Standard mouse events are even propagated out to your DOM element, so you\ncan still have rollover and mousedown effects.\n\nDefinitely works in IE8+ and all of the evergreen browsers.\nShould also work in IE7 if you provide a polyfill for the global `JSON` object, e.g.\n[JSON 2](https://github.com/douglascrockford/JSON-js/blob/master/json2.js) or\n[JSON 3](http://bestiejs.github.io/json3/).\n\n\n## Contributing\n\nsee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n\n## Releases\n\nStarting with version [1.1.7](https://github.com/zeroclipboard/zeroclipboard/releases/tag/v1.1.7), ZeroClipboard uses [semantic versioning](http://semver.org/).\n\nsee [releases](https://github.com/zeroclipboard/zeroclipboard/releases)\n\n\n## Roadmap\n\nsee [roadmap.md](docs/roadmap.md)\n\n\n## Last Build\n\n[![Build Status](https://secure.travis-ci.org/zeroclipboard/zeroclipboard.png?branch=master)](https://travis-ci.org/zeroclipboard/zeroclipboard)\n",
  "readmeFilename": "README.md",
  "_id": "zeroclipboard@2.0.0-beta.8",
  "dist": {
    "shasum": "8c8f46cdd09910692acf55eefb1d08e95d4d7089"
  },
  "_from": "zeroclipboard@",
  "_resolved": "https://registry.npmjs.org/zeroclipboard/-/zeroclipboard-2.0.0-beta.8.tgz"
}
